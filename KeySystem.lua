local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==7) then function v41(v43,v44,v45)local v46=v43[1];local v47=v43[2];local v48=v43[1 + 2 ];return function(...)local v80=v46;local v81=v47;local v82=v48;local v83=v39;local v84=1;local v85= -1;local v86={};local v87={...};local v88=v20("#",...) -1 ;local v89={};local v90={};for v103=0,v88 do if (v103>=v82) then v86[v103-v82 ]=v87[v103 + 1 ];else v90[v103]=v87[v103 + 1 + 0 ];end end local v91=(v88-v82) + 1 ;local v92;local v93;while true do v92=v80[v84];v93=v92[1];if (v93<=42) then if (v93<=20) then if (v93<=(886 -(282 + 595))) then if (v93<=4) then if (v93<=1) then if (v93==0) then v90[v92[2]]=v92[888 -(261 + 624) ];else do return;end end elseif (v93<=2) then local v136=v81[v92[3]];local v137;local v138={};v137=v18({},{[v7("\215\50\80\240\223\231\154","\78\136\109\57\158\187\130\226")]=function(v207,v208)local v209=0;local v210;while true do if (v209==0) then v210=v138[v208];return v210[1][v210[2]];end end end,[v7("\1\0\247\244\41\54\247\245\59\39","\145\94\95\153")]=function(v211,v212,v213)local v214=v138[v212];v214[1638 -(1523 + 114) ][v214[2]]=v213;end});for v216=1,v92[4] do local v217=0;local v218;while true do if (v217==1) then if (v218[1]==(54 + 6)) then v138[v216-(1 -0) ]={v90,v218[3]};else v138[v216-1 ]={v44,v218[1083 -(1020 + 60) ]};end v89[ #v89 + (1424 -(630 + 793)) ]=v138;break;end if (v217==0) then v84=v84 + 1 ;v218=v80[v84];v217=1;end end end v90[v92[2]]=v41(v136,v137,v45);elseif (v93>(9 -6)) then local v230=v92[2];v90[v230](v21(v90,v230 + 1 ,v92[3]));else v90[v92[2]]=v44[v92[3]];end elseif (v93<=6) then if (v93==(1070 -(68 + 997))) then local v140=0;local v141;while true do if (v140==0) then v141=v92[9 -7 ];do return v21(v90,v141,v85);end break;end end else local v142=v92[2];do return v90[v142](v21(v90,v142 + 1 ,v92[3]));end end elseif (v93<=7) then v90[v92[2]]=v90[v92[3]][v92[2 + 2 ]];elseif (v93>8) then v90[v92[2]][v92[3]]=v92[13 -9 ];else v90[v92[2]]=v45[v92[3]];end elseif (v93<=14) then if (v93<=11) then if (v93==10) then do return;end else local v145=0;local v146;local v147;local v148;while true do if (1==v145) then v148={};v147=v18({},{[v7("\194\242\29\219\74\178\229","\215\157\173\116\181\46")]=function(v336,v337)local v338=v148[v337];return v338[1271 -(226 + 1044) ][v338[2]];end,[v7("\10\139\133\247\205\60\186\143\247\194","\186\85\212\235\146")]=function(v339,v340,v341)local v342=0;local v343;while true do if (v342==0) then v343=v148[v340];v343[1][v343[8 -6 ]]=v341;break;end end end});v145=2;end if (v145==0) then v146=v81[v92[3]];v147=nil;v145=1;end if (2==v145) then for v344=1,v92[4] do local v345=0;local v346;while true do if (v345==0) then v84=v84 + 1 ;v346=v80[v84];v345=1;end if (v345==1) then if (v346[1]==60) then v148[v344-(118 -(32 + 85)) ]={v90,v346[3]};else v148[v344-1 ]={v44,v346[3]};end v89[ #v89 + 1 ]=v148;break;end end end v90[v92[2]]=v41(v146,v147,v45);break;end end end elseif (v93<=(12 + 0)) then local v149=0;local v150;local v151;local v152;while true do if (v149==1) then v152=v90[v150 + 2 ];if (v152>0) then if (v151>v90[v150 + 1 ]) then v84=v92[3];else v90[v150 + 3 ]=v151;end elseif (v151<v90[v150 + 1 ]) then v84=v92[3];else v90[v150 + 3 ]=v151;end break;end if (v149==0) then v150=v92[2];v151=v90[v150];v149=1;end end elseif (v93==13) then local v237=0;local v238;while true do if (v237==0) then v238=v92[1749 -(760 + 987) ];v90[v238](v21(v90,v238 + 1 ,v85));break;end end else v90[v92[2]]=v90[v92[3]]%v92[1917 -(1789 + 124) ] ;end elseif (v93<=17) then if (v93<=(4 + 11)) then v90[v92[959 -(892 + 65) ]]=v44[v92[3]];elseif (v93>(782 -(745 + 21))) then local v240=0;local v241;local v242;local v243;while true do if (v240==1) then v243=v90[v241] + v242 ;v90[v241]=v243;v240=2;end if (v240==2) then if (v242>0) then if (v243<=v90[v241 + 1 + 0 ]) then local v408=0;while true do if (v408==0) then v84=v92[3];v90[v241 + 3 ]=v243;break;end end end elseif (v243>=v90[v241 + 1 ]) then local v409=0;while true do if (v409==0) then v84=v92[3];v90[v241 + 3 ]=v243;break;end end end break;end if (0==v240) then v241=v92[2];v242=v90[v241 + 2 ];v240=1;end end else v90[v92[2]]={};end elseif (v93<=18) then v90[v92[4 -2 ]]=v41(v81[v92[3]],nil,v45);elseif (v93>19) then v90[v92[2]]= #v90[v92[3]];else local v246=0;local v247;local v248;local v249;while true do if (1==v246) then v249=v90[v247 + 2 ];if (v249>(0 -0)) then if (v248>v90[v247 + 1 ]) then v84=v92[3];else v90[v247 + (11 -8) ]=v248;end elseif (v248<v90[v247 + (1 -0) ]) then v84=v92[3];else v90[v247 + 1 + 2 ]=v248;end break;end if (0==v246) then v247=v92[2];v248=v90[v247];v246=1;end end end elseif (v93<=(25 + 6)) then if (v93<=(1080 -(87 + 968))) then if (v93<=22) then if (v93==21) then local v156=v92[2];v90[v156](v90[v156 + 1 ]);else local v157=0;local v158;while true do if (v157==0) then v158=v92[3 -1 ];v90[v158]=v90[v158](v21(v90,v158 + 1 ,v92[3]));break;end end end elseif (v93<=23) then v90[v92[2]]=v90[v92[3]]%v92[4] ;elseif (v93==24) then if (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[13 -10 ];end else local v250=v92[2 + 0 ];local v251,v252=v83(v90[v250](v21(v90,v250 + 1 ,v92[3])));v85=(v252 + v250) -(2 -1) ;local v253=0;for v315=v250,v85 do local v316=0;while true do if (v316==0) then v253=v253 + 1 ;v90[v315]=v251[v253];break;end end end end elseif (v93<=28) then if (v93<=26) then if v90[v92[352 -(87 + 263) ]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==27) then local v255=0;local v256;local v257;while true do if (v255==1) then v90[v256 + 1 ]=v257;v90[v256]=v257[v92[4]];break;end if (v255==0) then v256=v92[1415 -(447 + 966) ];v257=v90[v92[3]];v255=1;end end else local v258=v92[2];local v259,v260=v83(v90[v258](v90[v258 + 1 ]));v85=(v260 + v258) -1 ;local v261=0;for v317=v258,v85 do v261=v261 + 1 ;v90[v317]=v259[v261];end end elseif (v93<=29) then v90[v92[2]][v90[v92[8 -5 ]]]=v92[4];elseif (v93>30) then v90[v92[2]]();elseif (v90[v92[2]]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=(1853 -(1703 + 114))) then if (v93<=33) then if (v93>(212 -(67 + 113))) then local v162=0;local v163;while true do if (v162==0) then v163=v92[2];do return v21(v90,v163,v85);end break;end end else local v164=v92[2];local v165,v166=v83(v90[v164](v90[v164 + 1 ]));v85=(v166 + v164) -1 ;local v167=0 + 0 ;for v219=v164,v85 do local v220=0;while true do if (v220==0) then v167=v167 + 1 ;v90[v219]=v165[v167];break;end end end end elseif (v93<=34) then local v168=0;local v169;local v170;while true do if (1==v168) then for v351=v169 + 1 ,v85 do v15(v170,v90[v351]);end break;end if (v168==0) then v169=v92[2];v170=v90[v169];v168=1;end end elseif (v93>35) then local v262=v92[2];local v263={};for v323=1, #v89 do local v324=0;local v325;while true do if (v324==0) then v325=v89[v323];for v397=701 -(376 + 325) , #v325 do local v398=v325[v397];local v399=v398[2 -1 ];local v400=v398[2];if ((v399==v90) and (v400>=v262)) then local v414=0;while true do if (v414==0) then v263[v400]=v399[v400];v398[1]=v263;break;end end end end break;end end end else local v264=0;local v265;local v266;while true do if (v264==0) then v265=v92[2];v266=v90[v265];v264=1;end if (v264==1) then for v384=v265 + 1 + 0 ,v85 do v15(v266,v90[v384]);end break;end end end elseif (v93<=39) then if (v93<=37) then v90[v92[2]]=v90[v92[3]] + v92[15 -11 ] ;elseif (v93==38) then v90[v92[954 -(802 + 150) ]]=v45[v92[3]];elseif v90[v92[2]] then v84=v84 + 1 ;else v84=v92[7 -4 ];end elseif (v93<=(65 -25)) then v90[v92[2]]();elseif (v93>41) then v90[v92[2]]=v92[8 -5 ] + v90[v92[4]] ;else v90[v92[2]]= #v90[v92[3]];end elseif (v93<=63) then if (v93<=52) then if (v93<=(84 -37)) then if (v93<=44) then if (v93==43) then v90[v92[1 + 1 ]]=v90[v92[3 + 0 ]][v92[4]];else do return v90[v92[999 -(915 + 82) ]]();end end elseif (v93<=(98 -53)) then v90[v92[2]]=v90[v92[3]]%v90[v92[4]] ;elseif (v93==46) then v90[v92[2]][v90[v92[3]]]=v92[4];else v90[v92[2]]=v92[3] + v90[v92[4]] ;end elseif (v93<=(138 -89)) then if (v93>(62 -(9 + 5))) then local v175=v92[2];v90[v175](v21(v90,v175 + 1 ,v85));else for v221=v92[378 -(85 + 291) ],v92[3] do v90[v221]=nil;end end elseif (v93<=50) then local v176=v92[2];local v177=v90[v92[3]];v90[v176 + 1 ]=v177;v90[v176]=v177[v92[1269 -(243 + 1022) ]];elseif (v93==51) then local v274=0;local v275;local v276;local v277;while true do if (v274==1) then v277=v90[v275] + v276 ;v90[v275]=v277;v274=2;end if (0==v274) then v275=v92[7 -5 ];v276=v90[v275 + 2 ];v274=1;end if (v274==2) then if (v276>0) then if (v277<=v90[v275 + 1 + 0 ]) then local v415=0;while true do if (v415==0) then v84=v92[3];v90[v275 + 3 ]=v277;break;end end end elseif (v277>=v90[v275 + 1 ]) then v84=v92[3];v90[v275 + 3 ]=v277;end break;end end else v90[v92[2]][v90[v92[3]]]=v90[v92[4]];end elseif (v93<=57) then if (v93<=(1234 -(1123 + 57))) then if (v93==53) then local v181=0;local v182;while true do if (v181==0) then v182=v92[2];v90[v182]=v90[v182](v21(v90,v182 + 1 ,v92[3]));break;end end else local v183=0;local v184;while true do if (v183==0) then v184=v92[2];v90[v184](v90[v184 + 1 ]);break;end end end elseif (v93<=55) then v90[v92[2 + 0 ]]=v90[v92[3]];elseif (v93>56) then if  not v90[v92[2]] then v84=v84 + (1 -0) ;else v84=v92[3 + 0 ];end else local v280=0;local v281;local v282;while true do if (v280==0) then v281=v92[2];v282={};v280=1;end if (v280==1) then for v385=1, #v89 do local v386=v89[v385];for v401=0, #v386 do local v402=0;local v403;local v404;local v405;while true do if (v402==1) then v405=v403[2];if ((v404==v90) and (v405>=v281)) then local v430=0;while true do if (v430==0) then v282[v405]=v404[v405];v403[1]=v282;break;end end end break;end if (v402==0) then v403=v386[v401];v404=v403[1];v402=1;end end end end break;end end end elseif (v93<=60) then if (v93<=58) then if  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==59) then v90[v92[2]][v92[3]]=v90[v92[4]];else v90[v92[2]]=v90[v92[257 -(163 + 91) ]];end elseif (v93<=61) then v90[v92[1932 -(1869 + 61) ]][v92[1 + 2 ]]=v90[v92[1191 -(1069 + 118) ]];elseif (v93==62) then v84=v92[3];elseif (v92[2]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[10 -7 ];end elseif (v93<=74) then if (v93<=68) then if (v93<=65) then if (v93>(145 -81)) then for v223=v92[2],v92[3] do v90[v223]=nil;end elseif (v90[v92[2]]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=(144 -78)) then local v189=v92[2];local v190,v191=v83(v90[v189](v21(v90,v189 + 1 ,v85)));v85=(v191 + v189) -(1 -0) ;local v192=0 + 0 ;for v225=v189,v85 do v192=v192 + 1 ;v90[v225]=v190[v192];end elseif (v93>67) then if (v92[2]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end else v84=v92[4 -1 ];end elseif (v93<=(10 + 61)) then if (v93<=69) then local v193=0;local v194;while true do if (v193==0) then v194=v92[2];v90[v194]=v90[v194](v90[v194 + 1 ]);break;end end elseif (v93>70) then local v291=v92[2 -0 ];v90[v291]=v90[v291](v21(v90,v291 + 1 ,v85));else local v293=v92[2];v90[v293]=v90[v293](v90[v293 + 1 + 0 ]);end elseif (v93<=(863 -(368 + 423))) then v90[v92[2]][v92[3 + 0 ]]=v92[4];elseif (v93==73) then v90[v92[2]]=v90[v92[3]]%v90[v92[4]] ;else local v296=v92[2];v90[v296](v21(v90,v296 + 1 ,v92[3]));end elseif (v93<=79) then if (v93<=(1550 -(1329 + 145))) then if (v93>(1046 -(140 + 831))) then local v197=v92[2];local v198,v199=v83(v90[v197](v21(v90,v197 + 1 ,v85)));v85=(v199 + v197) -(3 -2) ;local v200=0;for v228=v197,v85 do local v229=0;while true do if (v229==0) then v200=v200 + 1 ;v90[v228]=v198[v200];break;end end end else v90[v92[20 -(10 + 8) ]]={};end elseif (v93<=(1927 -(1409 + 441))) then v90[v92[2]]=v41(v81[v92[721 -(15 + 703) ]],nil,v45);elseif (v93==78) then local v297=v92[2];local v298,v299=v83(v90[v297](v21(v90,v297 + 1 ,v92[3])));v85=(v299 + v297) -1 ;local v300=0;for v331=v297,v85 do local v332=0;while true do if (v332==0) then v300=v300 + 1 ;v90[v331]=v298[v300];break;end end end else v90[v92[7 -5 ]]=v90[v92[3]] + v92[4] ;end elseif (v93<=82) then if (v93<=80) then v90[v92[2]]=v92[3];elseif (v93==81) then if (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end else local v302=0;local v303;while true do if (v302==0) then v303=v92[2];v90[v303]=v90[v303](v21(v90,v303 + 1 ,v85));break;end end end elseif (v93<=83) then do return v90[v92[1 + 1 ]]();end elseif (v93>(526 -(416 + 26))) then local v304=v92[2];do return v90[v304](v21(v90,v304 + 1 ,v92[3]));end else v90[v92[2]][v90[v92[3]]]=v90[v92[4]];end v84=v84 + 1 ;end end;end return v41(v40(),{},v28)(...);end if (v29==2) then function v33()local v49=v9(v27,v30,v30);v30=v30 + 1 ;return v49;end v34=nil;function v34()local v50=0;local v51;local v52;while true do if (v50==0) then v51,v52=v9(v27,v30,v30 + 2 );v30=v30 + (1488 -(998 + 488)) ;v50=1;end if (v50==1) then return (v52 * 256) + v51 ;end end end v29=3;end if (v29==5) then v38=v35;v39=nil;function v39(...)return {...},v20("#",...);end v29=6;end if (v29==4) then function v36()local v53=0;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v53==0) then v54=v35();v55=v35();v53=1;end if (2==v53) then v58=v32(v55,21,31);v59=((v32(v55,32)==1) and  -1) or (2 -1) ;v53=3;end if (v53==1) then v56=1;v57=(v32(v55,1,20) * (2^32)) + v54 ;v53=2;end if (v53==3) then if (v58==0) then if (v57==0) then return v59 * (0 -0) ;else v58=1;v56=0;end elseif (v58==(5272 -3225)) then return ((v57==0) and (v59 * (1/0))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/(2^52))) ;end end end v37=nil;function v37(v60)local v61=0;local v62;local v63;while true do if (v61==2) then v63={};for v115=620 -(555 + 64) , #v62 do v63[v115]=v10(v9(v11(v62,v115,v115)));end v61=3;end if (v61==1) then v62=v11(v27,v30,(v30 + v60) -1 );v30=v30 + v60 ;v61=2;end if (0==v61) then v62=nil;if  not v60 then v60=v35();if (v60==0) then return "";end end v61=1;end if (v61==3) then return v14(v63);end end end v29=5;end if (v29==6) then v40=nil;function v40()local v64={};local v65={};local v66={};local v67={v64,v65,nil,v66};local v68=v35();local v69={};for v94=1139 -(116 + 1022) ,v68 do local v95=0;local v96;local v97;while true do if (v95==1) then if (v96==1) then v97=v33()~=(0 -0) ;elseif (v96==2) then v97=v36();elseif (v96==3) then v97=v37();end v69[v94]=v97;break;end if (v95==0) then v96=v33();v97=nil;v95=1;end end end v67[3]=v33();for v98=932 -(857 + 74) ,v35() do local v99=0;local v100;while true do if (0==v99) then v100=v33();if (v32(v100,1,1)==0) then local v118=v32(v100,2 + 0 ,3);local v119=v32(v100,4,574 -(367 + 201) );local v120={v34(),v34(),nil,nil};if (v118==(859 -(814 + 45))) then local v123=0;while true do if (v123==0) then v120[3]=v34();v120[4]=v34();break;end end elseif (v118==1) then v120[3]=v35();elseif (v118==2) then v120[3]=v35() -(2^16) ;elseif (v118==3) then v120[3]=v35() -(2^16) ;v120[4]=v34();end if (v32(v119,2 -1 ,1)==1) then v120[929 -(214 + 713) ]=v69[v120[2]];end if (v32(v119,2,2)==1) then v120[3]=v69[v120[3]];end if (v32(v119,3,3)==1) then v120[4]=v69[v120[1 + 3 ]];end v64[v98]=v120;end break;end end end for v101=1,v35() do v65[v101-1 ]=v40();end return v67;end v41=nil;v29=7;end if (1==v29) then v32=nil;function v32(v71,v72,v73)if v73 then local v106=(v71/(2^(v72-1)))%(2^(((v73-(2 -1)) -(v72-(1 + 0))) + 1)) ;return v106-(v106%1) ;else local v107=2^(v72-(1 -0)) ;return (((v71%(v107 + v107))>=v107) and (439 -(145 + 293))) or (430 -(44 + 386)) ;end end v33=nil;v29=2;end if (v29==3) then v35=nil;function v35()local v74=0;local v75;local v76;local v77;local v78;while true do if (v74==0) then v75,v76,v77,v78=v9(v27,v30,v30 + 3 );v30=v30 + 2 + 2 ;v74=1;end if (v74==1) then return (v78 * 16777216) + (v77 * 65536) + (v76 * 256) + v75 ;end end end v36=nil;v29=4;end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\140\207","\56\162\225\118\158\89\142"),function(v79)if (v9(v79,2)==79) then local v108=0;while true do if (v108==0) then v31=v8(v11(v79,1,1));return "";end end else local v109=0;local v110;while true do if (v109==0) then v110=v10(v8(v79,51 -35 ));if v31 then local v122=v13(v110,v31);v31=nil;return v122;else return v110;end break;end end end end);v29=1;end end end vv17(),...);
